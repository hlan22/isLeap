[{"path":"https://hlan22.github.io/isLeap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 isLeap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hlan22.github.io/isLeap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://hlan22.github.io/isLeap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). isLeap: leap year. R package version 0.0.0.9000, https://hlan22.github.io/isLeap/.","code":"@Manual{,   title = {isLeap: Is it a leap year},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://hlan22.github.io/isLeap/}, }"},{"path":"https://hlan22.github.io/isLeap/index.html","id":"isleap-a-sample-r-package","dir":"","previous_headings":"","what":"Is it a leap year","title":"Is it a leap year","text":"Created instructions DSCI 310 class, learned make example package R using devtools. ’s purpose help determine given year leap year!","code":""},{"path":[]},{"path":[]},{"path":"https://hlan22.github.io/isLeap/index.html","id":"devtools-package","dir":"","previous_headings":"","what":"devtools Package","title":"Is it a leap year","text":"devtools package R used simplify package development. provides functions create, document, test R packages efficiently.","code":""},{"path":"https://hlan22.github.io/isLeap/index.html","id":"key-functions-in-devtools","dir":"","previous_headings":"devtools Package","what":"Key Functions in devtools","title":"Is it a leap year","text":"Displays details current R session, including loaded packages, R version, system information. Useful debugging sharing reproducibility details. Creates new R package given name specified directory. Sets necessary file structure R package, including DESCRIPTION, NAMESPACE, R/ folders. class, `create_package(“~/Documents/isLeap”) Creates new R script file (name.R) inside R/ folder package. Helps keep functions organized developing packages.","code":""},{"path":"https://hlan22.github.io/isLeap/index.html","id":"triple-colons--in-r","dir":"","previous_headings":"","what":"Triple Colons (:::) in R","title":"Is it a leap year","text":"Normally, package::function() used call function loaded package. package:::function() (triple colons) allows access internal (non-exported) functions package. mostly used debugging exploring undocumented functions within package. Important: Using ::: recommended regular use since internal functions may change without notice.","code":""},{"path":"https://hlan22.github.io/isLeap/index.html","id":"steps-to-add-a-local-repository-to-github","dir":"","previous_headings":"","what":"Steps to Add a Local Repository to GitHub","title":"Is it a leap year","text":"Initialize Git Local Folder (already done) , Rstudio, can Create Repository GitHub Go GitHub create new repository. initialize README local repo already files. Add Remote Repository Replace <repository_url> URL GitHub repo. can verify works properly : Add Files Commit Push GitHub Verify Repository GitHub Go GitHub repository page confirm files uploaded.","code":"git init usethis::use_git() git remote add origin <repository_url> git remote -v git add . git commit -m \"Initial commit\" git push -u origin main"},{"path":"https://hlan22.github.io/isLeap/index.html","id":"a-guide-to-the-steps-done-in-class-to-checkinstall-package","dir":"","previous_headings":"","what":"A guide to the steps done in class to check/install package","title":"Is it a leap year","text":"Loads devtools package Creates new file RStudio called is_leap.R Loads info package isLeap Checks package follows requirements R (CRAN?) Adds “MIT + file LICENSE” Runs checks , “approved” Updates isLeap documentation loads Runs checks installs package local machine Now can load library can now use functions issues!","code":"library(devtools) use_r(\"is_leap\") devtools::load_all() devtools::check() usethis::use_mit_license() devtools::check() devtools::document() devtools::install() library(isLeap) is_leap(1000)"},{"path":"https://hlan22.github.io/isLeap/reference/is_leap.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a leap year? — is_leap","title":"Is this a leap year? — is_leap","text":"leap year?","code":""},{"path":"https://hlan22.github.io/isLeap/reference/is_leap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a leap year? — is_leap","text":"","code":"is_leap(num)"},{"path":"https://hlan22.github.io/isLeap/reference/is_leap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a leap year? — is_leap","text":"num number, string contains number","code":""},{"path":"https://hlan22.github.io/isLeap/reference/is_leap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this a leap year? — is_leap","text":"TRUE FALSE whether leap year","code":""},{"path":"https://hlan22.github.io/isLeap/reference/is_leap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is this a leap year? — is_leap","text":"","code":"# example code is_leap(1000) # returns TRUE #> [1] TRUE is_leap(11) # returns FALSE #> [1] FALSE is_leap(\"The year is 1000 CE\") # returns TRUE #> [1] TRUE"}]
